library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.ALL;

entity ALU_3 is
port(Clock:in std_logic;
A,B : in unsigned(7 downto 0);
student_id : in unsigned(3 downto 0);
OP : in unsigned(15 downto 0);
Result: out unsigned(3 downto 0));

end ALU_3;
architecture Behavior of ALU_3 is
signal Reg1: unsigned(7 downto 0) :=(others=> '0');
begin	
Reg1 <= A; --storing A in Reg1
process(Clock,OP,A,B)
	begin	
	if(rising_edge(Clock)) THEN 
		case OP is
			 WHEN "0000000000000001" | "0000000000000010" | "0000000000000100" |
                 "0000000000001000" | "0000000000010000" | "0000000000100000" |
                 "0000000001000000" | "0000000010000000" | "0000000100000000" =>
					  
                   -- Check if any digit of A is less than Student_id
                if ((Reg1(7 downto 4) < student_id) OR --upper 4-bits of A
                   (Reg1(3 downto 0) < student_id)) then --lower 4-bits of A
                    Result <= "0001"; -- 'y'
                else 
                    Result <= "0000"; -- 'n'
                end if;
            WHEN OTHERS =>
                -- Don't care, no states greater than 9
        END CASE;
    END IF;
END PROCESS;
END Behavior;
